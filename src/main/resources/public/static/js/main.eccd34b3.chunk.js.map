{"version":3,"sources":["logo.svg","serviceWorker.js","components/Dovanos/DovanaComponent.js","components/Dovanos/DovanuList.js","components/Dovanos/DovanuListContainer.js","components/Navigacija/Navigacija.js","components/Dovanu administravimas/AdminDovanosKomponentas.js","components/Dovanu administravimas/DovanosAdminList.js","components/Dovanu administravimas/DovanuAdminContainer.js","components/Dovanu administravimas/AddNewDovanaComponent.js","components/Dovanu administravimas/AddNewDovanaContainer.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","styles","card","width","image","height","DovanaComponent","className","style","src","this","props","alt","title","description","kidsPresent","to","onClick","onDetailsClick","Component","DovanuList","dovana","dovanos","map","index","key","id","event","DovanuListContainer","handleDetailsClick","console","log","preventDefault","history","push","state","axios","get","then","response","setState","data","catch","error","Navigacija","DovanosAdminComponent","scope","DovanosAdminList","DovanuAdminContainer","type","onAddNew","onBack","AddNewDovanaFormComponent","onSubmit","onSave","name","placeholder","onChange","required","onNoClick","onYesClick","value","AddNewDovanaContainer","handleChange","target","handleSave","duomenys","post","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eccd34b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst styles = {\n    card: { width: '18rem' },\n    image: { height: '200px' }\n}\n\nclass DovanaComponent extends Component {\n    render() {\n        return (\n            <div className=\"card\" style={styles.card} >\n                <img src={this.props.image} className=\"card-img-top\" alt={this.props.title} style={styles.image} />\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{this.props.title}</h5>\n                    <p className=\"card-text\">{this.props.description}</p>\n                    <p className=\"card-text\">{this.props.kidsPresent} Dovana skirta vaikams</p>\n                    <Link to={`/dovanos/${this.props.title}`}><button className=\"btn btn-warning\" onClick={this.props.onDetailsClick}>Perziureti</button></Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nDovanaComponent.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    description: PropTypes.string,\n    kidsPresent: PropTypes.bool,\n    onDetailsClick: PropTypes.func.isRequired\n}\n\nexport default DovanaComponent;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DovanaComponent from './DovanaComponent';\n\nvar DovanuList = (props) => {\n    var dovana = props.dovanos.map((dovana, index) => {\n        // console.log(product.id)\n        return (\n            <DovanaComponent\n                key={index}\n                id={dovana.id}\n                title={dovana.title}\n                description={dovana.description}\n                kidsPresent={dovana.kidsPresent}\n                onDetailsClick={(event) => props.onDetailsClick(event, dovana.id)}\n            />\n        );\n    });\n    return (<div className=\"row\">{dovana}</div>);\n};\n\nDovanuList.propTypes = {\n    dovanos: PropTypes.array.isRequired,\n    onDetailsClick: PropTypes.func.isRequired,\n};\n\nexport default DovanuList;\n","import React, { Component } from 'react';\nimport DovanuList from './DovanuList';\nimport axios from 'axios';\n\nclass DovanuListContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { dovanos: [] };\n    }\n\n    componentDidMount() {\n        axios.get(\"http://localhost:8081/api/dovanos\")\n            .then((response) => {\n                console.log(response)\n                this.setState({ dovanos: response.data });\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }\n\n    handleDetailsClick = (event, id) => {\n        console.log(id)\n        event.preventDefault();\n        this.props.history.push(`/` + id); // gal ir cia details pagal title turetu rodyt, o ne pagal id?\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <DovanuList\n                        dovanos={this.state.dovanos}\n                        onDetailsClick={this.handleDetailsClick}\n                    />\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default DovanuListContainer;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nvar Navigacija = (props) => {\n    return (\n        <div className=\"container\">\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link to=\"/\" className=\"nav-link\">Dovanos</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/admin\" className=\"nav-link\">Admin</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/laiskai\" className=\"nav-link\">Laiskai</Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </div >\n    );\n}\n\nexport default Navigacija;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst styles = {\n    card: { width: '18rem' },\n    image: { height: '200px' }\n}\n\nclass DovanosAdminComponent extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <table className=\"table\">\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">{this.props.id}</th>\n                            <td>{this.props.title}</td>\n                            <td>{this.props.image}</td>\n                            <td>{this.props.kidsPresent}</td>\n                            {/* <td><Link to={`/admin/${this.props.id}`}><button type=\"button\" className=\"btn btn-light\" onClick={this.props.onCheckDetails}>Check And update</button></Link></td> */}\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nDovanosAdminComponent.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    description: PropTypes.string,\n    kidsPresent: PropTypes.bool,\n    onCheckDetails: PropTypes.func.isRequired\n}\n\nexport default DovanosAdminComponent;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DovanosAdminComponent from './AdminDovanosKomponentas';\n\nvar DovanosAdminList = (props) => {\n    var dovana = props.dovanos.map((dovana, index) => {\n        // console.log(product.id)\n        return (\n            <DovanosAdminComponent\n                key={index}\n                id={dovana.id}\n                image={dovana.image}\n                title={dovana.title}\n                description={dovana.description}\n                kidsPresent={dovana.kidsPresent}\n            // onCheckDetails={(event) => props.onCheckDetails(event, dovana.title)}\n            />\n        );\n    });\n    return (<div className=\"row\">{dovana}</div>);\n};\n\nDovanosAdminList.propTypes = {\n    dovanos: PropTypes.array.isRequired,\n    // onCheckDetails: PropTypes.func.isRequired,\n};\n\nexport default DovanosAdminList;\n","import React, { Component } from 'react';\nimport DovanosAdminList from './DovanosAdminList';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass DovanuAdminContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { dovanos: [] };\n    }\n\n    componentDidMount() {\n        axios.get(\"http://localhost:8081/api/dovanos\")\n            .then((response) => {\n                console.log(response)\n                this.setState({ dovanos: response.data });\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }\n\n    // handleCheckDetails = (event, id) => {\n    //     console.log(productId)\n    //     event.preventDefault();\n    //     this.props.history.push(`/admin/` + productId);\n    // }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <table className=\"table\">\n                    <thead className=\"thead-light\">\n                        <tr>\n                            <th scope=\"col\">ID</th>\n                            <th scope=\"col\">Pavadinimas</th>\n                            <th scope=\"col\">Nuotrauka</th>\n                            <th scope=\"col\">Dovana vaikams</th>\n                        </tr>\n                    </thead>\n                </table>\n                <DovanosAdminList\n                    dovanos={this.state.dovanos}\n                // onCheckDetails={this.handleCheckDetails}\n                />\n\n                <Link to=\"/admin/add\"><button type=\"button\" className=\"btn btn-light\" onClick={this.props.onAddNew}>Prideti nauja dovana</button></Link>\n                <Link to=\"/\"><button type=\"button\" className=\"btn btn-light\" onClick={this.props.onBack}>Grizti i dovanu sarasa</button></Link>\n            </div>\n        );\n    }\n};\n\nexport default DovanuAdminContainer;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddNewDovanaFormComponent extends Component {\n    render() {\n        console.log(this.props)\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.props.onSave}>\n                    <div className=\"form-row\">\n                        <div className=\"col-md-3 mb-3\">\n                            <label>Pavadinimas</label>\n                            <input type=\"text\" name=\"title\" className=\"form-control\" id=\"validationDefault01\" placeholder=\"Pavadinimas\" onChange={this.props.onChange} required />\n                        </div>\n                        <div className=\"col-md-3 mb-3\">\n                            <label>Paveikslelio nuoroda</label>\n                            <div className=\"input-group mb-3\">\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text\" id=\"basic-addon3\">https://picsum.photos/</span>\n                                </div>\n                                <input type=\"text\" name=\"image\" className=\"form-control\" id=\"basic-url\" onChange={this.props.onChange} />\n                            </div>\n                        </div>\n                        <div className=\"col-md-3 mb-3\">\n                            <label>Aprasymas</label>\n                            <div className=\"input-group\">\n                                <input type=\"text\" name=\"description\" className=\"form-control\" id=\"validationDefault03\" placeholder=\"Informacija apie dovana\" required onChange={this.props.onChange} />\n                            </div>\n                        </div>\n                        <div className=\"col-md-3 mb-3\">\n                            <label>Ar dovana skirta vaikams</label>\n                            <div className=\"input-group\">\n                                <button className=\"btn btn-primary\" onNoClick={this.props.onNoClick}>Ne</button>\n                                <button className=\"btn btn-primary\" onYesClick={this.props.onYesClick}>Taip</button>\n                            </div>\n                        </div>\n                    </div>\n                    {/* <div className=\"form-row\">\n                        <div className=\"col-md-2 offset-md-4 mb-3\">\n                            <label>Price</label>\n                            <input type=\"text\" name=\"price\" className=\"form-control\" id=\"validationDefault03\" placeholder=\"Price\" required onChange={this.props.onChange} />\n                        </div>\n                        <div className=\"col-md-2 mb-3\">\n                            <label>Quantity</label>\n                            <input type=\"text\" name=\"quantity\" className=\"form-control\" id=\"validationDefault04\" placeholder=\"Quantity\" onChange={this.props.onChange} />\n                        </div>\n                    </div> */}\n                    <div className=\"form-row\">\n                        <div className=\"col-md-2 offset-md-4 mb-3\">\n                            <button className=\"btn btn-warning\" type=\"submit\" value=\"Submit\">Issaugoti</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nAddNewDovanaFormComponent.propTypes = {\n    onChange: PropTypes.func,\n    onSave: PropTypes.func,\n    onYesClick: PropTypes.func,\n    onNoClick: PropTypes.func,\n};\n\nexport default AddNewDovanaFormComponent;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport AddNewDovanaFormComponent from './AddNewDovanaComponent';\n\nclass AddNewDovanaContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dovana: {\n                title: '',\n                image: '',\n                description: '',\n                kidsPresent: '',\n            }\n        };\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleSave = (event) => {\n        let duomenys = {\n            title: this.state.title,\n            description: this.state.description,\n            image: this.state.image,\n            kidsPresent: this.state.kidsPresent,\n        }\n        axios\n            .post(\"http://localhost:8081/api/dovanos\", duomenys)\n            .then((response) => {\n                console.log(\"post ok\");\n                // axios\n                //     .get(\"http://localhost:8080/\")\n                //     .then((response) => {\n                //         this.setState({\n                //             product: response.data\n                //         });\n                //     })\n                //     .catch((error) => {\n                //         console.log(error);\n                //     })\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <AddNewDovanaFormComponent\n                dovana={this.state.dovana}\n                onChange={this.handleChange}\n                onSave={this.handleSave} />\n        )\n    }\n}\n\nexport default AddNewDovanaContainer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { Switch, Redirect, Route } from 'react-router';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport DovanuListContainer from './components/Dovanos/DovanuListContainer';\nimport Navigacija from './components/Navigacija/Navigacija';\nimport DovanuAdminContainer from './components/Dovanu administravimas/DovanuAdminContainer';\nimport AddNewDovanaContainer from './components/Dovanu administravimas/AddNewDovanaContainer';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Navigacija />\n        <Route exact path=\"/\" component={DovanuListContainer} />\n        <Route exact path=\"/admin/\" component={DovanuAdminContainer} />\n        <Route exact path=\"/admin/add\" component={AddNewDovanaContainer} />\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}